name: Pipeline

on:
  push:

jobs:

  # Lint

  check-ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: ./.github/actions/lint-install
      - name: Run ruff
        run: |
          make check-ruff

  check-black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: ./.github/actions/lint-install
      - name: Run black
        run: |
          make check-black

  check-isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: ./.github/actions/lint-install
      - name: Run isort
        run: |
          make check-isort

  check-mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: ./.github/actions/lint-install
      - name: Run mypy
        run: |
          make check-mypy

  check-pylint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: ./.github/actions/lint-install
      - name: Install dependencies
        run: |
          make install-dev SYNC=""
      - name: Run pylint
        run: |
          make check-pylint

  # Test

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          cache: "pip"
          python-version: "3.11"
      - name: Install dependencies
        run: |
          make install-ci
          make install-test
      - name: Run tests
        run: |
          make cover-xml
      - name: Upload debug artifacts
        uses: actions/upload-artifact@v3
        with:
          name: debug-artifacts-${{ github.sha }}
          path: ./debug
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # Release

  release:
    runs-on: ubuntu-latest
    needs: [ check-ruff, check-black, check-isort, check-mypy, check-pylint, test ]
    concurrency: release
    permissions:
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          cache: "pip"
          python-version: "3.11"
      - name: Install dependencies
        run: |
          make install-ci
          poetry install --only dev
      - name: Set env vars
        shell: bash
        run: |
          echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
      - name: Release
        id: release-status
        shell: bash
        run: |
          if [[ $GITHUB_REF == "refs/heads/main" ]]
          then
            make semrel
          else
            make semrel-dev
          fi
      - name: Publish to PyPI
        if: ${{ github.ref == 'refs/heads/main' && steps.release-status.outputs.released == 'true' }}
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Publish to TestPyPI
        if: ${{ github.ref != 'refs/heads/main' && steps.release-status.outputs.released == 'true' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
