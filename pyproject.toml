# Poetry

[tool.poetry]
name = "codenames"
version = "3.0.3"
description = "Codenames board game logic implementation in python."
authors = ["Asaf Kali <akali93@gmail.com>"]
readme = "README.md"

[tool.poetry.extras]
web = ["selenium"]

[tool.poetry.dependencies]
# Core
python = "^3.8"
pydantic = "^1.9"
# CLI
beautifultable = "^1.0"
# Web
selenium = { version = "^4.1", optional = true }

[tool.poetry.group.test.dependencies]
pytest = "^7.2.2"
coverage = "^7.2.3"

[tool.poetry.group.lint.dependencies]
ruff = "^0.0.261"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.2.0"
pylint = "^2.17.2"
types-requests = "^2.28.11.17"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.2.2"
twine = "^4.0.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Test

[tool.pytest.ini_options]
addopts = "-s --disable-pytest-warnings"

[tool.coverage.run]
source = ["codenames"]

# Lint

[tool.ruff]
line-length = 120
select = ["B", "C", "E", "F", "W"]
ignore = []
exclude = ["local", ".deployment"]

[tool.black]
line-length = 120

[tool.isort]
skip = ["__init__.py"]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
exclude = ["build", "dist"]

[tool.pylint]
max-line-length = 120
good-names = [
    "by",
    "e",
    "i",
    "n",
    "x",
]
disable = [
    "C0114",
    "C0115",
    "C0116",
    "R0801",
    "R0903",
    "W1203",
    "fixme",
    "too-many-arguments",
    "too-many-public-methods",
    "too-many-return-statements",
    "too-many-locals",
]
extension-pkg-allow-list = ["pydantic"]
